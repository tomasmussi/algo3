<project name="CarmenSandiego" default="Menu" basedir="."><description/>
	
        <property name="srcfuente" value="src" />
        <property name="srctest" value="test" />
        <property name="build" value="build" />
        <property name="lib" value="libs/" />
        <property name="doc.dir" value="documentacion/javadoc" />
        <property name="zip.name" value="CarmenSandieog.zip" />
		<property name="dist" value="dist" />

        <path id="classpath">
                <fileset dir="${lib}">
                        <include name="*.jar" />
                		<include name="xstream/*.jar"/>
                </fileset>
                <pathelement location="${build}" />
        </path>

        <target name="init" depends="clean">
                <tstamp/>
        <mkdir dir="${build}"/>
        <mkdir dir="${dist}"/>
        </target>
        
        <target name="clean">
        <!--Elimina la carpeta de compilaciones pasadas y la vuelve a crear-->
                <delete dir="${build}"/>
                <delete file="MANIFEST.MF"/>
        </target>
        
        <target name="compilar" depends="init" description="Compila la aplicacion" >
                <!-- Compile the java code from ${src} into ${build} -->
                <javac srcdir="${srcfuente}" classpath="${classpath}" destdir="${build}">
                        <classpath refid="classpath" />
                </javac>
        </target>

        <target name="compilarTest" depends="compilar" description="Compila los tests" >
                <javac srcdir="${srctest}" classpath="${classpath}" destdir="${build}">
                        <classpath refid="classpath" />
                </javac>
                
        </target>
        
        <target name="corrertests" depends="compilarTest" description="Corre los Tests">        
        <junit>
                <classpath>
                        <pathelement path="${build}" />
                        <fileset dir="${lib}">
                                <include name="**/*.jar"/>
                        		<include name="xstream/*.jar"/>
                        </fileset>
                </classpath>
                <formatter type="brief" usefile="false" />
                        <batchtest>
                                <fileset dir="${build}" includes="**/*Test.class" />
                        </batchtest>
                </junit>
        </target>
        
        <target name="compilarWork" depends="init" description="Compila la aplicacion" >
                <!-- Compile the java code from ${src} into ${build} -->                
                <javac srcdir="${srcfuente}src/" classpath="${build}" destdir="${build}">
                        <classpath refid="classpath" />
                </javac>
        </target>
        
        <target name="compilarTestWork" depends="compilarWork" description="Compila los test" >
                <javac srcdir="${srctest}src/" classpath="${classpath}" destdir="${build}">
                        <classpath refid="classpath" />
                </javac>        
        </target>
        
        <target name="corrertestsWork" depends="compilarTestWork" description="Corre la aplicacion">    
        <junit>
                <formatter type="brief" usefile="false" />
                        <classpath>     
                                <pathelement path="${build}" />
                                <fileset dir="${lib}">
                                        <include name="**/*.jar"/>
                                </fileset>
                        </classpath>
                        <batchtest>
                                <fileset dir="${build}" includes="**/*Test.class" />
                        </batchtest>
                </junit>
        </target>
        
        <target name="makeJar" depends="compilar" description="Crea un Jar ejecutable">
                <manifest file="MANIFEST.MF">
                        <attribute name="Built-By" value="Tomas"/>
                        <attribute name="Main-Class" value="algo3.modelo.juego.Aplicacion"/>
                </manifest>
                <!--<unjar dest="${build}" src="lib/titiritero.jar"/>-->
                <copy todir="${build}">
                        <fileset dir="${srcfuente}">
                                <exclude name="**/*.java"/>
                        </fileset>
                </copy>
                <jar destfile="release/Algo42.jar" basedir="bin" includes="**" manifest="MANIFEST.MF"/>
                <mkdir dir="release/configuraciones"/>
                <copy todir="release/configuraciones">
                        <fileset dir="configuraciones">
                                <include name="**/*.settings"/>
                        </fileset>
                </copy>
                <mkdir dir="release/Saves"/>
        </target>

        <target name="correrPrograma" depends="makeJar" description="Corre el programa desde un Jar">
                <ant target="clean"/>
                <java 
                        jar="release/Algo42.jar"
                        fork="true"
                        />
        </target>
        
        <target name="Menu">
                <echo>ant clean : limpia los directorios de compilaciones pasadas (No necesario en correrPrograma)</echo>
                <echo>ant compilar : compila el programa</echo>
                <echo>ant corrertests : compila el programa y corre los tests</echo>
                <echo>ant correrPrograma : genera el archivo .jar y lo ejecuta</echo>
                <echo>ant makeJar: genera un archivo .jar ejecutable del juego</echo>
                <echo>ant compilarWork : compila el programa desde la estructura del workspace</echo>
                <echo>ant corrertestsWork : compila el programa y corre los tests desde la estructura del workspace</echo>
        </target>
        
</project>